name: Create ISO

on:
  push:
    branches:
      - main
    paths:
      - releng/**

jobs:
  build_iso:
    runs-on: ubuntu-20.04
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v4
        with:
          root-reserve-mb: 53295
          swap-size-mb: 1024
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"

      - name: Partial Clone
        shell: bash
        run: |
          REPO="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git config --global user.email github-actions@github.com
          git config --global user.name github-actions
          git clone -q --filter=blob:none --no-checkout --depth=1 --sparse $REPO && cd dune-archiso
          git sparse-checkout set releng
          git checkout

      - uses: addnab/docker-run-action@v3
        with:
          image: registry.gitlab.com/dune-archiso/images/dune-archiso-docker:latest
          options: --privileged -v ${{github.workspace}}:/home/aur/
          shell: bash
          run: |
            mkdir /build && chown -R aur:aur /build && cd /build && sudo -u aur git clone --filter=blob:none --depth=1 "https://git.omame.xyz/CyberOS/cyberos-keyring.git" && cd cyberos-keyring && sudo -u aur makepkg --noconfirm -si && cd /
            pacman --noconfirm -Sqyyu archiso > /dev/null 2>&1
            mkarchiso -v /home/aur/dune-archiso/releng
            pacman -Qtdq | xargs -r pacman --noconfirm -Rcns > /dev/null 2>&1
            # sudo chown -R $(whoami):$(whoami) ~/
            # sudo chmod -R 707 ~/out/*.iso ~/
            rm -rf /work /home/aur/semicolon_delimited_script
            md5sum /out/*.iso > /out/dunearchiso-`date +%Y.%m.%d`-x86_64.iso.md5
            mv /out/*.{iso,md5} /home/aur/dune-archiso
            ls -la /home/aur/dune-archiso

      - name: "Tar files"
        run: |
          # ls -lR ~/work/dune-archiso/dune-archiso/dune-archiso
          # pwd
          tar --zstd -cf ISO.tar.zst ~/work/dune-archiso/dune-archiso/dune-archiso/*.iso

      - uses: actions/upload-artifact@v2
        with:
          name: ISO-artifact
          path: ISO.tar.zst
          if-no-files-found: error
          retention-days: 90

  # distribute_iso:
  #   runs-on: ubuntu-20.04
  #   needs: build_iso
  #   steps:
  #     - uses: szenius/set-timezone@v1.0
  #       with:
  #         timezoneLinux: "America/Lima"

  #     - name: Download tarball
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: ISO-artifact

  #     - name: Untar files
  #       run: |
  #         tar -I zstd -xvf ISO.tar.zst
  #         echo "TODAY=$(echo `date +'%Y.%m.%d'`)" >> $GITHUB_ENV

  #     - name: Create GitHub release
  #       id: create-new-release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: v${{ github.run_number }}
  #         release_name: Release ${{ github.run_number }}

  #     - name: Upload asset to GitHub release
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ steps.create-new-release.outputs.upload_url }}
  #         asset_path: dunearchiso-${{ env.TODAY }}-x86_64.iso
  #         asset_name: dunearchiso-${{ env.TODAY }}-x86_64.iso
  #         asset_content_type: application/octet-stream
